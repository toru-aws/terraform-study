- name: Deploy Spring Boot Application
  hosts: all
  collections:
    - amazon.aws

  tasks:
    - name: Ensure Java 17 is installed
      dnf:
        name: java-17-amazon-corretto-devel.x86_64
        state: present
    
    - name: Install python3-pip on EC2
      dnf:
        name: python3-pip
        state: present
      become: true

    - name: Install AWS Python SDK on EC2
      pip:
         name:
           - boto3
           - botocore
         executable: pip3
      become: true
      
    - name: Create application directory
      file:
        path: /opt/myapp
        state: directory
        mode: '0755'

    - name: Show AWS_DEFAULT_REGION
      debug:
        msg: "AWS_DEFAULT_REGION={{ lookup('env','AWS_DEFAULT_REGION') }}"

    - name: Download JAR from S3
      amazon.aws.aws_s3:
        bucket: "{{ lookup('env', 'S3_BUCKET') }}"
        object: "myapp.jar"
        dest: /opt/myapp/myapp.jar
        mode: get
        region: ap-northeast-1
        environment:
          AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
          AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
          AWS_DEFAULT_REGION: "ap-northeast-1"

    - name: Create systemd service for Spring Boot
      copy:
        dest: /etc/systemd/system/myapp.service
        content: |
          [Unit]
          Description=Spring Boot Application
          After=network.target

          [Service]
          User=ec2-user
          WorkingDirectory=/opt/myapp
          ExecStart=/usr/bin/java -jar /opt/myapp/myapp.jar
            --server.address=0.0.0.0
            --server.port=8080
            --spring.datasource.url=jdbc:h2:mem:testdb
            --spring.datasource.driver-class-name=org.h2.Driver
            --spring.datasource.username=sa
            --spring.datasource.password=
            --spring.h2.console.enabled=true
          SuccessExitStatus=143
          Restart=always
          RestartSec=10
          StandardOutput=syslog
          StandardError=syslog
          SyslogIdentifier=myapp

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start myapp service
      systemd:
        name: myapp
        enabled: yes
        state: started

    - name: Wait for application to start
      uri:
        url: "http://localhost:8080"
        status_code: 200
        timeout: 60
      register: app_check
      retries: 5
      delay: 5
      until: app_check.status == 200

    - name: Print confirmation
      debug:
        msg: "âœ… Spring Boot app started successfully on port 8080 and is accessible externally."
